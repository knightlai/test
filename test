#!/bin/bash
#LNMP一键安装脚本
#2018-11-20

#安装环境之前需要安装的一些依赖包
yum -y install gcc gcc-c++ automake autoconf libtool make openssl openssl-devel mhash-devel libxslt-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel mysql-server

RETVAL=0
NGINX="/usr/local/nginx/sbin/nginx"
PHP="/usr/local/php/sbin/php-fpm" 
mysql(){
     #安装mysql
     wget http://mirrors.163.com/mysql/Downloads/MySQL-5.6/mysql-5.6.39-linux-glibc2.12-x86_64.tar.gz
    tar xzvf mysql-5.6.39-linux-glibc2.12-x86_64.tar.gz
    mv mysql-5.6.39-linux-glibc2.12-x86_64  /usr/local/mysql
    cd /usr/local/mysql
    adduser mysql
    mkdir /data
    ./scripts/mysql_install_db  --user=mysql --datatdir=/data/mysql
    if [ $RETVAL -eq 0 ]
    then
    cp support-files/my-default.cnf  /etc/my.cnf
    cp support-files/mysql.server /etc/init.d/mysqld
    chmod 755 /etc/init.d/mysqld
    RETVAL=$?
     else
         echo "mysql启动失败"
     fi
}
mysqlcheck(){
     rpm -qa | grep mariadb
     RETVAL=$?
     if [ $RETVAL -eq 0 ]
     then
         systemctl status mariadb
         RETVAL=$?
         if [ $RETVAL -eq 0 ]
         then
              echo "mysql正在运行中"
         else
              echo "未运行mysql"
         fi
     else
         echo "未安装mysql"
     fi
}
mysql
mysqlcheck
nginxinstall(){
     #安装软件依赖包
     yum -y groupinstall "Development Tools" "Server PlatformDeveopment"
     yum -y install openssl-devel pcre-devel
     cd /usr/local/src
     yum install -y wget
     #下载nginx包
     wget http://nginx.org/download/nginx-1.12.0.tar.gz
     useradd nginx   #添加nginx运行的用户
     tar zxvf nginx-1.12.0.tar.gz
     cd nginx-1.12.0/
     #安装nginx包
     ./configure --prefix=/usr/local/nginx --user=nginx --group=nginx--with-http_ssl_module --with-http_flv_module --with-http_stub_status_module--with-http_gzip_static_module --with-pcre
     #编译安装
     make && make install
     RETVAL=$?
     if [ $RETVAL -eq 0 ]
     then
         /usr/local/nginx/sbin/nginx  #启动nginx
     else
         echo "nginx编译失败"
     fi
}
nginxcheck(){
     if [ -f $NGINX -a -x $NGINX ]
     then
         /usr/local/nginx/sbin/nginx -t   #检查nginx
         RETVAL=$?
         if [ $RETVAL -eq 0 ]
         then
              echo "nginx检查完毕"
              /usr/local/nginx/sbin/nginx
 
              netstat -ntlp | grep nginx
              RETVAL=$?
              if [ $RETVAL -eq 0 ]
              then
                 echo "nginx启动成功"
              else
                  echo "nginx启动失败"
              fi
        else
            echo "please check your nginx"
        fi
    else
        echo "nginx不存在或者没有权限"
    fi
}
nginxinstall
nginxcheck
phpfpm(){
     cd /usr/local/src
     #下载依赖包
     yum -y install libmcrypt-devel bzip2-devel gcc openssl-devel php-mcryptlibmcrypt libxml2-devel libjpeg-devel libpng-devel freetype-devel curl-devel
     #下载php包
     wget http://cn2.php.net/distributions/php-5.5.38.tar.gz
     tar zxvf php-5.5.38.tar.gz
     cd php-5.5.38/
     #安装php包
     ./configure --prefix=/usr/local/php-fpm --with-config-file-path=/usr/local/php-fpm/etc --enable-fpm --with-fpm-user=php-fpm --with-fpm-group=php-fpm --with-mysql=/usr/local/mysql --with-mysqli=/usr/local/mysql/bin/mysql_config --with-pdo-mysql=/usr/local/mysql --with-mysql-sock=/tmp/mysql.sock --with-libxml-dir --with-gd --with-jpeg-dir --with-png-dir --with-freetype-dir --with-iconv-dir --with-zlib-dir --with-mcrypt --enable-soap --enable-gd-native-ttf --enable-ftp --enable-mbstring --enable-exif --with-pear --with-curl  
--with-openssl
     #编译安装     
     make && make install
     RETVAL=$?
     if [ $RETVAL -eq 0 ]
     then
         #开始一些配置步骤
         cp /usr/local/src/php-5.5.38/php.ini-production/usr/local/php/etc/php.ini
         mv /usr/local/php/etc/php-fpm.conf.default/usr/local/php/etc/php-fpm.conf
         #创建php用户
         useradd -M -s /sbin/nologin php
         #修改相关配置
         sed -i -e 's\;pid = run/php-fpm.pid\pid = run/php-fpm.pid\g' -e's\nobody\php\g' -e 's\listen = 127.0.0.1:9000\listen = 0.0.0.0:9000\g'/usr/local/php/etc/php-fpm.conf
         sed -i 's\;daemonize = yes\daemonize = no\g' /usr/local/php/etc/php-fpm.conf
         #启动php
         /usr/local/php/sbin/php-fpm &
     else
         echo "php编译失败"
     fi
}
 
phpcheck(){
     if [ -x $PHP -a -x $PHP ]
     then
         /usr/local/php/sbin/php-fpm -t
         RETVAL=$?
         if [ $RETVAL -eq 0 ]
         then
              echo "php检查完毕"
              /usr/local/php/sbin/php-fpm &
 
              netstat -ntlp | grep php-fpm
              RETVAL=$?
              if [ $RETVAL -eq 0 ]
              then
                  echo "php启动成功"
              else
                  echo "php启动失败"
              fi
         else
              echo "please check yourphp"
         fi
      else
         echo "php不存在或者没有权限"
     fi
}
phpfpm
phpcheck 

case "$1" in
     nginx)
          if [ ! -f $NGINX ]
          then
              nginxinstall
              nginxcheck
          else
               echo "已经安装nginx了"
          fi
          ;;
     php-fpm)
          if [ ! -f $PHP ]
          then
               phpfpm
               phpcheck
          else
               echo "已经安装php了"
          fi
          ;;
     mysql)
          rpm -qa | grep mariadb
          RETVAL=$?
          if [ $RETVAL -eq 0 ]
          then
               mysql
               mysqlcheck
          else
               echo "已经安装mysql了"
          fi
          ;;
esac
